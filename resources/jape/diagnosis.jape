Phase: Diagnosis
Input:  Lookup Sentence 
Options: control=brill

/* 
  * Use certain Lookup.STY with diagnosis annotations 
  * e.g. (Lookup.PREF == "Diagnosis")
  * also includes nested diagnosis i.e. multiple diagnosis in a phrase
  * not filtered for epilepsy specific at this stage
*/


Rule: getDiagnosis
(
    ({Lookup.PREF == "Diagnosis"} | {Lookup.PREF == "Diagnosed"} | {Lookup.label == "suffers"})
    (
    {Lookup.STY == "Disease or Syndrome", Lookup.Certainty >= 1} | 
	{Lookup.STY == "Sign or Symptom", Lookup.PREF != "Fit NOS", Lookup.Certainty >= 1} | 
	{Lookup.STY == "Mental or Behavioral Dysfunction", Lookup.Certainty >= 1} |
	{Lookup.STY == "Congenital Abnormality", Lookup.Certainty >= 1} |
	({Lookup.STY == "Diagnostic Procedure", Lookup.Certainty >= 1} |
	{Lookup.Temporality == historical})?
	)*
	(
	{Lookup.STY == "Disease or Syndrome", Lookup.Certainty >= 1} |
	{Lookup.STY == "Sign or Symptom", Lookup.PREF != "Fit NOS", Lookup.Certainty >= 1} |
	{Lookup.STY == "Mental or Behavioral Dysfunction", Lookup.Certainty >= 1} |
	{Lookup.STY == "Congenital Abnormality", Lookup.Certainty >= 1} |
	({Lookup.STY == "Diagnostic Procedure", Lookup.Certainty >= 1})?
	):item
):diag
-->
:item.Diagnosis = { 
rule = "getDiagnosis", 
PREF = :item.Lookup.PREF, 
CUI = :item.Lookup.inst, STY = :item.Lookup.STY, 
Negation = :item.Lookup.Negation,
Experiencer = :item.Lookup.Experiencer, 
Temporality = :item.Lookup.Temporality, 
Certainty = :item.Lookup.Certainty
}


